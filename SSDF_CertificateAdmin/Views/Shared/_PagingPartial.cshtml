
<ul class="pagination">
    @{ 
        double _pageCount = ((double)((Model.TotalCount - 1) / Model.PageSize));
        int pageCount = _pageCount - (Math.Round(_pageCount)) != 0 ? (int)(_pageCount + 1) : (int)_pageCount;

        string classNameForNext = Model.CurrentPage == _pageCount ? "disabled" : string.Empty;
        string classNameForPrevious = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    } 

    <li class="@classNameForPrevious">
        @if (classNameForPrevious == string.Empty)
        {
            @Html.ActionLink("<< Föregående", "Index", new { page = (Model.CurrentPage - 1), SearchText = (Model.SearchString) })
        }
        else
        {
            <a href=" = "#"><< Föregående</a>
        }
         
    </li>
    @for (int pages = 1; pages <= pageCount; pages++)
    {
        string active = "";
        if(pages == Model.CurrentPage) { active = "active"; }
        <li class="@active">@Html.ActionLink(pages.ToString(), "Index", new { page = pages, SearchText = (Model.SearchString) })</li>
    }
    <li class="@classNameForNext">
        @if (classNameForNext == string.Empty)
        {
            @Html.ActionLink("Nästa >>", "Index", new { page = (Model.CurrentPage + 1), SearchText = (Model.SearchString) })
        }
        else
        {
            <a href="#">Nästa >></a>
        }
    </li>
</ul>

